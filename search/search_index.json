{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"how-to-use/","text":"How to use \u00b6 1. Additional metadata for tags \u00b6 In order for the url from the microservice to be transferred to the API Gateway, you need to add additional metadata for your tags. In our case, this is x-auto-generate-in-api-gateway . For example, we have such a microservice. Example The example was taken on the website FastAPI (Create metadata for tags) app.py from fastapi import FastAPI import uvicorn tags_metadata = [ { \"name\" : \"users\" , \"description\" : \"Operations with users. The **login** logic is also here.\" , }, { \"name\" : \"items\" , \"description\" : \"Manage items. So _fancy_ they have their own docs.\" , \"externalDocs\" : { \"description\" : \"Items external docs\" , \"url\" : \"https://fastapi.tiangolo.com/\" , }, }, ] app = FastAPI ( openapi_tags = tags_metadata ) @app . get ( \"/users/\" , tags = [ \"users\" ]) async def get_users (): return [{ \"name\" : \"Harry\" }, { \"name\" : \"Ron\" }] @app . get ( \"/items/\" , tags = [ \"items\" ]) async def get_items (): return [{ \"name\" : \"wand\" }, { \"name\" : \"flying broom\" }] if __name__ == '__main__' : uvicorn . run ( app , port = 5000 , log_level = \"info\" ) Adds an additional tag x-auto-generate-in-api-gateway in order for it to be transferred to the API Gateway. app.py from fastapi import FastAPI import uvicorn tags_metadata = [ { \"name\" : \"users\" , \"description\" : \"Operations with users. The **login** logic is also here.\" , \"x-auto-generate-in-api-gateway\" : True , # (1)! }, { \"name\" : \"items\" , \"description\" : \"Manage items. So _fancy_ they have their own docs.\" , \"externalDocs\" : { \"description\" : \"Items external docs\" , \"url\" : \"https://fastapi.tiangolo.com/\" }, \"x-auto-generate-in-api-gateway\" : True , # (2)! }, ] app = FastAPI ( openapi_tags = tags_metadata ) @app . get ( \"/users/\" , tags = [ \"users\" ]) async def get_users (): return [{ \"name\" : \"Harry\" }, { \"name\" : \"Ron\" }] @app . get ( \"/items/\" , tags = [ \"items\" ]) async def get_items (): return [{ \"name\" : \"wand\" }, { \"name\" : \"flying broom\" }] if __name__ == '__main__' : uvicorn . run ( app , port = 5000 , log_level = \"info\" ) Tag for transferred to the API Gateway. Tag for transferred to the API Gateway. Now who has the tag users and items will be automatically transferred to the API Gateway. Question If you suddenly change the tag for some reason, then you can do this when creating an object in the API Gateway 2. Initializing an object in the API Gateway \u00b6 Documentation in development","title":"How to use"},{"location":"how-to-use/#how-to-use","text":"","title":"How to use"},{"location":"how-to-use/#1-additional-metadata-for-tags","text":"In order for the url from the microservice to be transferred to the API Gateway, you need to add additional metadata for your tags. In our case, this is x-auto-generate-in-api-gateway . For example, we have such a microservice. Example The example was taken on the website FastAPI (Create metadata for tags) app.py from fastapi import FastAPI import uvicorn tags_metadata = [ { \"name\" : \"users\" , \"description\" : \"Operations with users. The **login** logic is also here.\" , }, { \"name\" : \"items\" , \"description\" : \"Manage items. So _fancy_ they have their own docs.\" , \"externalDocs\" : { \"description\" : \"Items external docs\" , \"url\" : \"https://fastapi.tiangolo.com/\" , }, }, ] app = FastAPI ( openapi_tags = tags_metadata ) @app . get ( \"/users/\" , tags = [ \"users\" ]) async def get_users (): return [{ \"name\" : \"Harry\" }, { \"name\" : \"Ron\" }] @app . get ( \"/items/\" , tags = [ \"items\" ]) async def get_items (): return [{ \"name\" : \"wand\" }, { \"name\" : \"flying broom\" }] if __name__ == '__main__' : uvicorn . run ( app , port = 5000 , log_level = \"info\" ) Adds an additional tag x-auto-generate-in-api-gateway in order for it to be transferred to the API Gateway. app.py from fastapi import FastAPI import uvicorn tags_metadata = [ { \"name\" : \"users\" , \"description\" : \"Operations with users. The **login** logic is also here.\" , \"x-auto-generate-in-api-gateway\" : True , # (1)! }, { \"name\" : \"items\" , \"description\" : \"Manage items. So _fancy_ they have their own docs.\" , \"externalDocs\" : { \"description\" : \"Items external docs\" , \"url\" : \"https://fastapi.tiangolo.com/\" }, \"x-auto-generate-in-api-gateway\" : True , # (2)! }, ] app = FastAPI ( openapi_tags = tags_metadata ) @app . get ( \"/users/\" , tags = [ \"users\" ]) async def get_users (): return [{ \"name\" : \"Harry\" }, { \"name\" : \"Ron\" }] @app . get ( \"/items/\" , tags = [ \"items\" ]) async def get_items (): return [{ \"name\" : \"wand\" }, { \"name\" : \"flying broom\" }] if __name__ == '__main__' : uvicorn . run ( app , port = 5000 , log_level = \"info\" ) Tag for transferred to the API Gateway. Tag for transferred to the API Gateway. Now who has the tag users and items will be automatically transferred to the API Gateway. Question If you suddenly change the tag for some reason, then you can do this when creating an object in the API Gateway","title":"1. Additional metadata for tags"},{"location":"how-to-use/#2-initializing-an-object-in-the-api-gateway","text":"Documentation in development","title":"2. Initializing an object in the API Gateway"},{"location":"overview/","text":"Overview \u00b6 This library allows you to automatically generate API gateway requests based on your implemented microservices. Installing \u00b6 To install fastapi-gateway-auto-generate : pip install fastapi-gateway-auto-generate","title":"Overview"},{"location":"overview/#overview","text":"This library allows you to automatically generate API gateway requests based on your implemented microservices.","title":"Overview"},{"location":"overview/#installing","text":"To install fastapi-gateway-auto-generate : pip install fastapi-gateway-auto-generate","title":"Installing"}]}